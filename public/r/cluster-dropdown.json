{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cluster-dropdown",
  "type": "registry:component",
  "title": "Cluster Dropdown",
  "description": "A dropdown menu to select a Solana cluster",
  "dependencies": [
    "@wallet-ui/react@canary"
  ],
  "registryDependencies": [
    "button",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/cluster-dropdown/cluster-dropdown.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { SolanaClusterId, useWalletUi, useWalletUiCluster } from '@wallet-ui/react';\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuTrigger,\n} from '@/registry/new-york/ui/dropdown-menu';\n\nexport function ClusterDropdown() {\n  const { cluster } = useWalletUi();\n  const { clusters, setCluster } = useWalletUiCluster();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\">{cluster.label}</Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuRadioGroup\n          value={cluster.id}\n          onValueChange={cluster => setCluster(cluster as SolanaClusterId)}\n        >\n          {clusters.map(cluster => {\n            return (\n              <DropdownMenuRadioItem key={cluster.id} value={cluster.id}>\n                {cluster.label}\n              </DropdownMenuRadioItem>\n            );\n          })}\n        </DropdownMenuRadioGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}